// Code generated by go-swagger; DO NOT EDIT.

package workspace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeleteWorkspaceHandlerFunc turns a function with the right signature into a delete workspace handler
type DeleteWorkspaceHandlerFunc func(DeleteWorkspaceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteWorkspaceHandlerFunc) Handle(params DeleteWorkspaceParams) middleware.Responder {
	return fn(params)
}

// DeleteWorkspaceHandler interface for that can handle valid delete workspace params
type DeleteWorkspaceHandler interface {
	Handle(DeleteWorkspaceParams) middleware.Responder
}

// NewDeleteWorkspace creates a new http.Handler for the delete workspace operation
func NewDeleteWorkspace(ctx *middleware.Context, handler DeleteWorkspaceHandler) *DeleteWorkspace {
	return &DeleteWorkspace{Context: ctx, Handler: handler}
}

/*DeleteWorkspace swagger:route DELETE /workspaces workspace deleteWorkspace

delete user's workspace


*/
type DeleteWorkspace struct {
	Context *middleware.Context
	Handler DeleteWorkspaceHandler
}

func (o *DeleteWorkspace) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteWorkspaceParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// DeleteWorkspaceBody workspace
//
// swagger:model DeleteWorkspaceBody
type DeleteWorkspaceBody struct {

	// path
	// Required: true
	Path *string `json:"path"`
}

// Validate validates this delete workspace body
func (o *DeleteWorkspaceBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePath(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteWorkspaceBody) validatePath(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"path", "body", o.Path); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteWorkspaceBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteWorkspaceBody) UnmarshalBinary(b []byte) error {
	var res DeleteWorkspaceBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
