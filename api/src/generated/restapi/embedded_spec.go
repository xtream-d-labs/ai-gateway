// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A platform for machine learning \u0026 high performance computing\n",
    "title": "AI Gateway",
    "version": "1.0.0"
  },
  "host": "localhost:9000",
  "basePath": "/api/v1",
  "paths": {
    "/configurations": {
      "get": {
        "description": "returns app configurations\n",
        "tags": [
          "app"
        ],
        "operationId": "getConfigurations",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "set app configurations\n",
        "tags": [
          "app"
        ],
        "operationId": "postConfigurations",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "AccountInfo",
              "properties": {
                "docker_hostname": {
                  "description": "Hostname for the private Docker registry",
                  "type": "string"
                },
                "docker_password": {
                  "description": "Password for the private Docker registry",
                  "type": "string",
                  "format": "password"
                },
                "docker_registry": {
                  "description": "Docker Registry endpoint",
                  "type": "string"
                },
                "docker_username": {
                  "description": "Username for the private Docker registry",
                  "type": "string"
                },
                "k8s_config": {
                  "description": "kubecfg",
                  "type": "string"
                },
                "ngc_apikey": {
                  "description": "NGC - API Key",
                  "type": "string"
                },
                "ngc_email": {
                  "description": "E-mail address for NGC console",
                  "type": "string",
                  "format": "email"
                },
                "ngc_password": {
                  "description": "Password for NGC console",
                  "type": "string",
                  "format": "password"
                },
                "rescale_key": {
                  "description": "Rescale - API Key",
                  "type": "string"
                },
                "rescale_platform": {
                  "description": "Rescale platform endopoint",
                  "type": "string",
                  "enum": [
                    "https://platform.rescale.com",
                    "https://platform.rescale.jp",
                    "https://kr.rescale.com",
                    "https://eu.rescale.com"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/endpoints": {
      "get": {
        "description": "returns third-party endpoints\n",
        "tags": [
          "app"
        ],
        "operationId": "getEndpoints",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Endpoints"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/errors": {
      "get": {
        "description": "returns the list of application errors\n",
        "tags": [
          "app-errors"
        ],
        "operationId": "getAppErrors",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppError"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/images": {
      "get": {
        "description": "returns local images\n",
        "tags": [
          "image"
        ],
        "operationId": "getImages",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Image"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "pull a specified image from Docker registry\n",
        "tags": [
          "image"
        ],
        "operationId": "postNewImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "ImageName",
              "required": [
                "image"
              ],
              "properties": {
                "image": {
                  "description": "Docker image name",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "delete a specified local image\n",
        "tags": [
          "image"
        ],
        "operationId": "deleteImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "ImageName",
              "required": [
                "image"
              ],
              "properties": {
                "image": {
                  "description": "Docker image name",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns training jobs on cloud\n",
        "tags": [
          "job"
        ],
        "operationId": "getJobs",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "Submit a job with the specified image\n",
        "tags": [
          "job"
        ],
        "operationId": "postNewJob",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "JobAttrs",
              "properties": {
                "commands": {
                  "description": "commands to be excuted after the entrypoint",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "cores": {
                  "description": "The number of CPU cores",
                  "type": "integer",
                  "format": "int64"
                },
                "coretype": {
                  "description": "Rescale CoreType as its infrastructure",
                  "type": "string"
                },
                "cpu": {
                  "description": "Requesting millicores of CPU",
                  "type": "integer",
                  "format": "int64"
                },
                "entrypoint_file": {
                  "description": "The entrypoint file of the job",
                  "type": "string"
                },
                "gpu": {
                  "description": "Requesting number of GPU",
                  "type": "integer",
                  "format": "int64"
                },
                "mem": {
                  "description": "Requesting bytes of memory",
                  "type": "integer",
                  "format": "int64"
                },
                "notebook_id": {
                  "description": "Notebook container ID",
                  "type": "string"
                },
                "platform_id": {
                  "description": "Platform ID",
                  "type": "string",
                  "enum": [
                    "kubernetes",
                    "rescale"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "type": "object",
              "title": "newJobID",
              "properties": {
                "id": {
                  "description": "ID of the new job",
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobs/{id}": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns the details of a job\n",
        "tags": [
          "job"
        ],
        "operationId": "getJobDetail",
        "parameters": [
          {
            "type": "string",
            "description": "Job ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobDetail"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "delete a job\n",
        "tags": [
          "job"
        ],
        "operationId": "deleteJob",
        "parameters": [
          {
            "type": "string",
            "description": "Job ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "modify the job status\n",
        "tags": [
          "job"
        ],
        "operationId": "modifyJob",
        "parameters": [
          {
            "type": "string",
            "description": "Job ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "JobAttrs",
              "properties": {
                "status": {
                  "description": "status",
                  "type": "string",
                  "enum": [
                    "stopped"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobs/{id}/files": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns the list of output files\n",
        "tags": [
          "job"
        ],
        "operationId": "getJobFiles",
        "parameters": [
          {
            "type": "string",
            "description": "Job ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobFiles"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobs/{id}/logs": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns the logs of a job\n",
        "tags": [
          "job"
        ],
        "operationId": "getJobLogs",
        "parameters": [
          {
            "type": "string",
            "description": "Job ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobLogs"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/notebooks": {
      "get": {
        "description": "returns Jupyter notebook information\n",
        "tags": [
          "notebook"
        ],
        "operationId": "getNotebooks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notebook"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "creates Jupyter notebook container\n",
        "tags": [
          "notebook"
        ],
        "operationId": "postNewNotebook",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "ImageName",
              "required": [
                "image"
              ],
              "properties": {
                "image": {
                  "description": "Docker image name",
                  "type": "string"
                },
                "workspace": {
                  "description": "workspace to be mounted",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/notebooks/{id}": {
      "get": {
        "description": "returns Jupyter notebook detail information\n",
        "tags": [
          "notebook"
        ],
        "operationId": "getNotebookDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Notebook container ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotebookDetail"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "delete a specified notebook\n",
        "tags": [
          "notebook"
        ],
        "operationId": "deleteNotebook",
        "parameters": [
          {
            "type": "string",
            "description": "Notebook container ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "description": "modify the notebook status\n",
        "tags": [
          "notebook"
        ],
        "operationId": "modifyNotebook",
        "parameters": [
          {
            "type": "string",
            "description": "Notebook container ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NotebookAttrs",
              "properties": {
                "status": {
                  "description": "status",
                  "type": "string",
                  "enum": [
                    "started",
                    "stopped"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/notebooks/{id}/ipynbs": {
      "get": {
        "description": "returns ipynb files on the specified notebook\n",
        "tags": [
          "notebook"
        ],
        "operationId": "getIPythonNotebooks",
        "parameters": [
          {
            "type": "string",
            "description": "Notebook container ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IPythonNotebook"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/nvidia/repositories": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns NGC repositories\n",
        "tags": [
          "repository"
        ],
        "operationId": "getNgcRepositories",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Repository"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/nvidia/repositories/{namespace}/images/{id}": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns NGC images\n",
        "tags": [
          "repository"
        ],
        "operationId": "getNgcImages",
        "parameters": [
          {
            "type": "string",
            "description": "Docker repositry namespace",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Docker image name",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NgcImage"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/remote-images/{id}": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns remote images\n",
        "tags": [
          "repository"
        ],
        "operationId": "getRemoteImages",
        "parameters": [
          {
            "type": "string",
            "description": "Docker image name",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Image"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/repositories": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns remote repositories\n",
        "tags": [
          "repository"
        ],
        "operationId": "getRemoteRepositories",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Repository"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rescale/applications/{code}/": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns a Rescale application\n",
        "tags": [
          "rescale"
        ],
        "operationId": "getRescaleApplication",
        "parameters": [
          {
            "enum": [
              "singularity"
            ],
            "type": "string",
            "description": "application code",
            "name": "code",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RescaleApplication"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rescale/applications/{code}/{version}/": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns version information of a specified Rescale application\n",
        "tags": [
          "rescale"
        ],
        "operationId": "getRescaleApplicationVersion",
        "parameters": [
          {
            "enum": [
              "singularity"
            ],
            "type": "string",
            "description": "Rescale application code",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Rescale application version",
            "name": "version",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RescaleApplicationVersion"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rescale/coretypes": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns Rescale CoreTypes\n",
        "tags": [
          "rescale"
        ],
        "operationId": "getRescaleCoreTypes",
        "parameters": [
          {
            "type": "string",
            "description": "Rescale Application version",
            "name": "app_ver",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Required number of GPUs",
            "name": "min_gpus",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RescaleCoreType"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "description": "login\n",
        "tags": [
          "app"
        ],
        "operationId": "postNewSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "AccountInfo",
              "required": [
                "docker_username",
                "docker_password"
              ],
              "properties": {
                "docker_password": {
                  "description": "Password for the private Docker registry",
                  "type": "string",
                  "format": "password"
                },
                "docker_username": {
                  "description": "Username for the private Docker registry",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/versions": {
      "get": {
        "description": "returns application versions\n",
        "tags": [
          "app"
        ],
        "operationId": "getVersions",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Versions"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workspaces": {
      "get": {
        "description": "returns user's workspaces\n",
        "tags": [
          "workspace"
        ],
        "operationId": "getWorkspaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Workspace"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "delete user's workspace\n",
        "tags": [
          "workspace"
        ],
        "operationId": "deleteWorkspace",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "workspace",
              "required": [
                "path"
              ],
              "properties": {
                "path": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AppError": {
      "description": "Application Error",
      "required": [
        "caption"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "condition": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "occursAt": {
          "description": "when it happened",
          "type": "string",
          "format": "date-time"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "Configuration": {
      "description": "app's configurations",
      "required": [
        "must_signed_in"
      ],
      "properties": {
        "docker_hostname": {
          "description": "Hostname for the private Docker registry",
          "type": "string"
        },
        "docker_password": {
          "description": "Fist 3 chars of the password of the private Docker registry",
          "type": "string"
        },
        "docker_registry": {
          "description": "Docker Registry endpoint",
          "type": "string"
        },
        "docker_username": {
          "description": "Username for the private Docker registry",
          "type": "string"
        },
        "k8s_config": {
          "description": "kubecfg",
          "type": "string"
        },
        "must_signed_in": {
          "description": "Users should be signed in",
          "type": "string",
          "enum": [
            "yes",
            "no"
          ]
        },
        "ngc_apikey": {
          "description": "Fist 5 chars of NGC API Key",
          "type": "string"
        },
        "ngc_email": {
          "description": "E-mail address for NGC console",
          "type": "string",
          "format": "email"
        },
        "ngc_password": {
          "description": "Fist 3 chars of the password for NGC console",
          "type": "string"
        },
        "rescale_key": {
          "description": "Fist 5 chars of Rescal API Key",
          "type": "string"
        },
        "rescale_platform": {
          "type": "string",
          "enum": [
            "https://platform.rescale.com",
            "https://platform.rescale.jp",
            "https://kr.rescale.com",
            "https://eu.rescale.com"
          ]
        },
        "use_k8s": {
          "description": "Kubernetes will be used or not",
          "type": "string",
          "enum": [
            "yes",
            "no"
          ]
        },
        "use_ngc": {
          "description": "NGC will be used or not",
          "type": "string",
          "enum": [
            "yes",
            "no"
          ]
        },
        "use_private_registry": {
          "description": "Private registry will be used or not",
          "type": "string",
          "enum": [
            "yes",
            "no"
          ]
        },
        "use_rescale": {
          "description": "Rescale will be used or not",
          "type": "string",
          "enum": [
            "yes",
            "no"
          ]
        }
      }
    },
    "Endpoints": {
      "description": "third-party endpoints",
      "type": "object",
      "properties": {
        "docker_registry": {
          "description": "The endpoint for private docker registry",
          "type": "string"
        },
        "kubernetes_api": {
          "description": "The endpoint for Kubernetes API",
          "type": "string"
        },
        "ngc_registry": {
          "description": "The endpoint for NGC registry",
          "type": "string"
        },
        "rescale_api": {
          "description": "The endpoint for Rescale API",
          "type": "string"
        }
      }
    },
    "Error": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "IPythonNotebook": {
      "description": ".ipynb file attributes",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "file name",
          "type": "string"
        }
      }
    },
    "Image": {
      "description": "docker image information",
      "required": [
        "id",
        "repoTags"
      ],
      "properties": {
        "created": {
          "description": "created unix timestamp",
          "type": "string"
        },
        "id": {
          "description": "the image ID",
          "type": "string"
        },
        "parentID": {
          "description": "the image parent ID",
          "type": "string"
        },
        "repoDigests": {
          "description": "the image digests",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "repoTags": {
          "description": "the image name/tag",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "description": "size of the image",
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "status of the image",
          "type": "string"
        },
        "virtualSize": {
          "description": "virtual size of the image",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Job": {
      "description": "Rescale Job information",
      "required": [
        "id"
      ],
      "properties": {
        "commands": {
          "description": "the container labels",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ended": {
          "description": "ended unix timestamp",
          "type": "string",
          "format": "date-time"
        },
        "external_link": {
          "description": "A link to an external status page",
          "type": "string"
        },
        "id": {
          "description": "Job ID",
          "type": "string"
        },
        "image": {
          "description": "the image ID",
          "type": "string"
        },
        "mounts": {
          "description": "the container labels",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "platform": {
          "description": "platform",
          "type": "string",
          "enum": [
            "kubernetes",
            "rescale"
          ]
        },
        "started": {
          "description": "started unix timestamp",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "the status of the job",
          "type": "string"
        }
      }
    },
    "JobDetail": {
      "description": "the details of a job",
      "allOf": [
        {
          "$ref": "#/definitions/Job"
        },
        {
          "$ref": "#/definitions/JobLogs"
        },
        {
          "$ref": "#/definitions/JobFiles"
        }
      ]
    },
    "JobFile": {
      "description": "the output file",
      "required": [
        "name",
        "size"
      ],
      "properties": {
        "downloadURL": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "JobFiles": {
      "description": "the output files",
      "required": [
        "files"
      ],
      "properties": {
        "apiToken": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobFile"
          }
        }
      }
    },
    "JobLog": {
      "description": "the log structure",
      "required": [
        "log"
      ],
      "properties": {
        "log": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "JobLogs": {
      "description": "the log structure",
      "required": [
        "logs"
      ],
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobLog"
          }
        }
      }
    },
    "NgcImage": {
      "description": "NGC docker image information",
      "required": [
        "tag",
        "size",
        "updated"
      ],
      "properties": {
        "size": {
          "description": "the image size",
          "type": "integer",
          "format": "int64"
        },
        "tag": {
          "description": "the image tag",
          "type": "string"
        },
        "updated": {
          "description": "updated unix timestamp",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Notebook": {
      "description": "Jupyter notebook information",
      "required": [
        "id",
        "name",
        "image"
      ],
      "properties": {
        "id": {
          "description": "the container ID",
          "type": "string"
        },
        "image": {
          "description": "the image ID",
          "type": "string"
        },
        "name": {
          "description": "the container name",
          "type": "string"
        },
        "port": {
          "description": "the container published port",
          "type": "integer",
          "format": "int64"
        },
        "started": {
          "description": "started unix timestamp",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "state of the container",
          "type": "string"
        }
      }
    },
    "NotebookDetail": {
      "description": "Rescale Job information",
      "required": [
        "id",
        "token"
      ],
      "properties": {
        "ended": {
          "description": "ended unix timestamp",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "the container ID",
          "type": "string"
        },
        "mounts": {
          "description": "the container labels",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "the container name",
          "type": "string"
        },
        "port": {
          "description": "the container published port",
          "type": "integer",
          "format": "int64"
        },
        "started": {
          "description": "started unix timestamp",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "state of the container",
          "type": "string"
        },
        "token": {
          "description": "Jupyter notebook's login token",
          "type": "string"
        }
      }
    },
    "Repository": {
      "description": "docker image information",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "description": {
          "description": "the image description",
          "type": "string"
        },
        "name": {
          "description": "the image name",
          "type": "string"
        },
        "namespace": {
          "description": "the repositry's namespace",
          "type": "string"
        }
      }
    },
    "RescaleApplication": {
      "description": "Rescale Application",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RescaleApplicationVersion"
          }
        }
      }
    },
    "RescaleApplicationVersion": {
      "description": "version of Rescale Applications",
      "required": [
        "id",
        "code",
        "version"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "coretypes": {
          "description": "supported CoreTypes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "RescaleCoreType": {
      "description": "Rescale CoreType",
      "required": [
        "code",
        "name"
      ],
      "properties": {
        "baseClock": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "interconnect": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "processor": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RescaleCoreTypeResources"
          }
        }
      }
    },
    "RescaleCoreTypeResources": {
      "description": "CPU/GPU cores",
      "required": [
        "cores",
        "gpus"
      ],
      "properties": {
        "cores": {
          "description": "the number of CPU cores",
          "type": "integer",
          "format": "int64"
        },
        "gpus": {
          "description": "the number of GPUs",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Session": {
      "description": "docker image information",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "description": "API Token",
          "type": "string"
        }
      }
    },
    "Version": {
      "description": "application version",
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "build_date": {
          "description": "date which this app was built at",
          "type": "string"
        },
        "version": {
          "description": "version name",
          "type": "string"
        }
      }
    },
    "Versions": {
      "description": "application versions",
      "type": "object",
      "required": [
        "current",
        "latest"
      ],
      "properties": {
        "current": {
          "description": "Current running service version",
          "$ref": "#/definitions/Version"
        },
        "latest": {
          "description": "The latest application version which can be installed",
          "$ref": "#/definitions/Version"
        }
      }
    },
    "Workspace": {
      "description": "User's workspace",
      "required": [
        "path"
      ],
      "properties": {
        "absolute_path": {
          "type": "string"
        },
        "jobs": {
          "description": "Jobs which are mounting the workspace",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notebooks": {
          "description": "Notebooks which are mounting the workspace",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "api-authorizer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A platform for machine learning \u0026 high performance computing\n",
    "title": "AI Gateway",
    "version": "1.0.0"
  },
  "host": "localhost:9000",
  "basePath": "/api/v1",
  "paths": {
    "/configurations": {
      "get": {
        "description": "returns app configurations\n",
        "tags": [
          "app"
        ],
        "operationId": "getConfigurations",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "set app configurations\n",
        "tags": [
          "app"
        ],
        "operationId": "postConfigurations",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "AccountInfo",
              "properties": {
                "docker_hostname": {
                  "description": "Hostname for the private Docker registry",
                  "type": "string"
                },
                "docker_password": {
                  "description": "Password for the private Docker registry",
                  "type": "string",
                  "format": "password"
                },
                "docker_registry": {
                  "description": "Docker Registry endpoint",
                  "type": "string"
                },
                "docker_username": {
                  "description": "Username for the private Docker registry",
                  "type": "string"
                },
                "k8s_config": {
                  "description": "kubecfg",
                  "type": "string"
                },
                "ngc_apikey": {
                  "description": "NGC - API Key",
                  "type": "string"
                },
                "ngc_email": {
                  "description": "E-mail address for NGC console",
                  "type": "string",
                  "format": "email"
                },
                "ngc_password": {
                  "description": "Password for NGC console",
                  "type": "string",
                  "format": "password"
                },
                "rescale_key": {
                  "description": "Rescale - API Key",
                  "type": "string"
                },
                "rescale_platform": {
                  "description": "Rescale platform endopoint",
                  "type": "string",
                  "enum": [
                    "https://platform.rescale.com",
                    "https://platform.rescale.jp",
                    "https://kr.rescale.com",
                    "https://eu.rescale.com"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/endpoints": {
      "get": {
        "description": "returns third-party endpoints\n",
        "tags": [
          "app"
        ],
        "operationId": "getEndpoints",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Endpoints"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/errors": {
      "get": {
        "description": "returns the list of application errors\n",
        "tags": [
          "app-errors"
        ],
        "operationId": "getAppErrors",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppError"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/images": {
      "get": {
        "description": "returns local images\n",
        "tags": [
          "image"
        ],
        "operationId": "getImages",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Image"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "pull a specified image from Docker registry\n",
        "tags": [
          "image"
        ],
        "operationId": "postNewImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "ImageName",
              "required": [
                "image"
              ],
              "properties": {
                "image": {
                  "description": "Docker image name",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "delete a specified local image\n",
        "tags": [
          "image"
        ],
        "operationId": "deleteImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "ImageName",
              "required": [
                "image"
              ],
              "properties": {
                "image": {
                  "description": "Docker image name",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns training jobs on cloud\n",
        "tags": [
          "job"
        ],
        "operationId": "getJobs",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "Submit a job with the specified image\n",
        "tags": [
          "job"
        ],
        "operationId": "postNewJob",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "JobAttrs",
              "properties": {
                "commands": {
                  "description": "commands to be excuted after the entrypoint",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "cores": {
                  "description": "The number of CPU cores",
                  "type": "integer",
                  "format": "int64"
                },
                "coretype": {
                  "description": "Rescale CoreType as its infrastructure",
                  "type": "string"
                },
                "cpu": {
                  "description": "Requesting millicores of CPU",
                  "type": "integer",
                  "format": "int64"
                },
                "entrypoint_file": {
                  "description": "The entrypoint file of the job",
                  "type": "string"
                },
                "gpu": {
                  "description": "Requesting number of GPU",
                  "type": "integer",
                  "format": "int64"
                },
                "mem": {
                  "description": "Requesting bytes of memory",
                  "type": "integer",
                  "format": "int64"
                },
                "notebook_id": {
                  "description": "Notebook container ID",
                  "type": "string"
                },
                "platform_id": {
                  "description": "Platform ID",
                  "type": "string",
                  "enum": [
                    "kubernetes",
                    "rescale"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "type": "object",
              "title": "newJobID",
              "properties": {
                "id": {
                  "description": "ID of the new job",
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobs/{id}": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns the details of a job\n",
        "tags": [
          "job"
        ],
        "operationId": "getJobDetail",
        "parameters": [
          {
            "type": "string",
            "description": "Job ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobDetail"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "delete a job\n",
        "tags": [
          "job"
        ],
        "operationId": "deleteJob",
        "parameters": [
          {
            "type": "string",
            "description": "Job ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "modify the job status\n",
        "tags": [
          "job"
        ],
        "operationId": "modifyJob",
        "parameters": [
          {
            "type": "string",
            "description": "Job ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "JobAttrs",
              "properties": {
                "status": {
                  "description": "status",
                  "type": "string",
                  "enum": [
                    "stopped"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobs/{id}/files": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns the list of output files\n",
        "tags": [
          "job"
        ],
        "operationId": "getJobFiles",
        "parameters": [
          {
            "type": "string",
            "description": "Job ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobFiles"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobs/{id}/logs": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns the logs of a job\n",
        "tags": [
          "job"
        ],
        "operationId": "getJobLogs",
        "parameters": [
          {
            "type": "string",
            "description": "Job ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobLogs"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/notebooks": {
      "get": {
        "description": "returns Jupyter notebook information\n",
        "tags": [
          "notebook"
        ],
        "operationId": "getNotebooks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notebook"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "creates Jupyter notebook container\n",
        "tags": [
          "notebook"
        ],
        "operationId": "postNewNotebook",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "ImageName",
              "required": [
                "image"
              ],
              "properties": {
                "image": {
                  "description": "Docker image name",
                  "type": "string"
                },
                "workspace": {
                  "description": "workspace to be mounted",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/notebooks/{id}": {
      "get": {
        "description": "returns Jupyter notebook detail information\n",
        "tags": [
          "notebook"
        ],
        "operationId": "getNotebookDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Notebook container ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotebookDetail"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "delete a specified notebook\n",
        "tags": [
          "notebook"
        ],
        "operationId": "deleteNotebook",
        "parameters": [
          {
            "type": "string",
            "description": "Notebook container ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "description": "modify the notebook status\n",
        "tags": [
          "notebook"
        ],
        "operationId": "modifyNotebook",
        "parameters": [
          {
            "type": "string",
            "description": "Notebook container ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NotebookAttrs",
              "properties": {
                "status": {
                  "description": "status",
                  "type": "string",
                  "enum": [
                    "started",
                    "stopped"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/notebooks/{id}/ipynbs": {
      "get": {
        "description": "returns ipynb files on the specified notebook\n",
        "tags": [
          "notebook"
        ],
        "operationId": "getIPythonNotebooks",
        "parameters": [
          {
            "type": "string",
            "description": "Notebook container ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IPythonNotebook"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/nvidia/repositories": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns NGC repositories\n",
        "tags": [
          "repository"
        ],
        "operationId": "getNgcRepositories",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Repository"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/nvidia/repositories/{namespace}/images/{id}": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns NGC images\n",
        "tags": [
          "repository"
        ],
        "operationId": "getNgcImages",
        "parameters": [
          {
            "type": "string",
            "description": "Docker repositry namespace",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Docker image name",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NgcImage"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/remote-images/{id}": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns remote images\n",
        "tags": [
          "repository"
        ],
        "operationId": "getRemoteImages",
        "parameters": [
          {
            "type": "string",
            "description": "Docker image name",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Image"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/repositories": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns remote repositories\n",
        "tags": [
          "repository"
        ],
        "operationId": "getRemoteRepositories",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Repository"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rescale/applications/{code}/": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns a Rescale application\n",
        "tags": [
          "rescale"
        ],
        "operationId": "getRescaleApplication",
        "parameters": [
          {
            "enum": [
              "singularity"
            ],
            "type": "string",
            "description": "application code",
            "name": "code",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RescaleApplication"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rescale/applications/{code}/{version}/": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns version information of a specified Rescale application\n",
        "tags": [
          "rescale"
        ],
        "operationId": "getRescaleApplicationVersion",
        "parameters": [
          {
            "enum": [
              "singularity"
            ],
            "type": "string",
            "description": "Rescale application code",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Rescale application version",
            "name": "version",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RescaleApplicationVersion"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rescale/coretypes": {
      "get": {
        "security": [
          {
            "api-authorizer": []
          }
        ],
        "description": "returns Rescale CoreTypes\n",
        "tags": [
          "rescale"
        ],
        "operationId": "getRescaleCoreTypes",
        "parameters": [
          {
            "type": "string",
            "description": "Rescale Application version",
            "name": "app_ver",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Required number of GPUs",
            "name": "min_gpus",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RescaleCoreType"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "description": "login\n",
        "tags": [
          "app"
        ],
        "operationId": "postNewSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "AccountInfo",
              "required": [
                "docker_username",
                "docker_password"
              ],
              "properties": {
                "docker_password": {
                  "description": "Password for the private Docker registry",
                  "type": "string",
                  "format": "password"
                },
                "docker_username": {
                  "description": "Username for the private Docker registry",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/versions": {
      "get": {
        "description": "returns application versions\n",
        "tags": [
          "app"
        ],
        "operationId": "getVersions",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Versions"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workspaces": {
      "get": {
        "description": "returns user's workspaces\n",
        "tags": [
          "workspace"
        ],
        "operationId": "getWorkspaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Workspace"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "delete user's workspace\n",
        "tags": [
          "workspace"
        ],
        "operationId": "deleteWorkspace",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "workspace",
              "required": [
                "path"
              ],
              "properties": {
                "path": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AppError": {
      "description": "Application Error",
      "required": [
        "caption"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "condition": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "occursAt": {
          "description": "when it happened",
          "type": "string",
          "format": "date-time"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "Configuration": {
      "description": "app's configurations",
      "required": [
        "must_signed_in"
      ],
      "properties": {
        "docker_hostname": {
          "description": "Hostname for the private Docker registry",
          "type": "string"
        },
        "docker_password": {
          "description": "Fist 3 chars of the password of the private Docker registry",
          "type": "string"
        },
        "docker_registry": {
          "description": "Docker Registry endpoint",
          "type": "string"
        },
        "docker_username": {
          "description": "Username for the private Docker registry",
          "type": "string"
        },
        "k8s_config": {
          "description": "kubecfg",
          "type": "string"
        },
        "must_signed_in": {
          "description": "Users should be signed in",
          "type": "string",
          "enum": [
            "yes",
            "no"
          ]
        },
        "ngc_apikey": {
          "description": "Fist 5 chars of NGC API Key",
          "type": "string"
        },
        "ngc_email": {
          "description": "E-mail address for NGC console",
          "type": "string",
          "format": "email"
        },
        "ngc_password": {
          "description": "Fist 3 chars of the password for NGC console",
          "type": "string"
        },
        "rescale_key": {
          "description": "Fist 5 chars of Rescal API Key",
          "type": "string"
        },
        "rescale_platform": {
          "type": "string",
          "enum": [
            "https://platform.rescale.com",
            "https://platform.rescale.jp",
            "https://kr.rescale.com",
            "https://eu.rescale.com"
          ]
        },
        "use_k8s": {
          "description": "Kubernetes will be used or not",
          "type": "string",
          "enum": [
            "yes",
            "no"
          ]
        },
        "use_ngc": {
          "description": "NGC will be used or not",
          "type": "string",
          "enum": [
            "yes",
            "no"
          ]
        },
        "use_private_registry": {
          "description": "Private registry will be used or not",
          "type": "string",
          "enum": [
            "yes",
            "no"
          ]
        },
        "use_rescale": {
          "description": "Rescale will be used or not",
          "type": "string",
          "enum": [
            "yes",
            "no"
          ]
        }
      }
    },
    "Endpoints": {
      "description": "third-party endpoints",
      "type": "object",
      "properties": {
        "docker_registry": {
          "description": "The endpoint for private docker registry",
          "type": "string"
        },
        "kubernetes_api": {
          "description": "The endpoint for Kubernetes API",
          "type": "string"
        },
        "ngc_registry": {
          "description": "The endpoint for NGC registry",
          "type": "string"
        },
        "rescale_api": {
          "description": "The endpoint for Rescale API",
          "type": "string"
        }
      }
    },
    "Error": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "IPythonNotebook": {
      "description": ".ipynb file attributes",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "file name",
          "type": "string"
        }
      }
    },
    "Image": {
      "description": "docker image information",
      "required": [
        "id",
        "repoTags"
      ],
      "properties": {
        "created": {
          "description": "created unix timestamp",
          "type": "string"
        },
        "id": {
          "description": "the image ID",
          "type": "string"
        },
        "parentID": {
          "description": "the image parent ID",
          "type": "string"
        },
        "repoDigests": {
          "description": "the image digests",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "repoTags": {
          "description": "the image name/tag",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "description": "size of the image",
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "status of the image",
          "type": "string"
        },
        "virtualSize": {
          "description": "virtual size of the image",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Job": {
      "description": "Rescale Job information",
      "required": [
        "id"
      ],
      "properties": {
        "commands": {
          "description": "the container labels",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ended": {
          "description": "ended unix timestamp",
          "type": "string",
          "format": "date-time"
        },
        "external_link": {
          "description": "A link to an external status page",
          "type": "string"
        },
        "id": {
          "description": "Job ID",
          "type": "string"
        },
        "image": {
          "description": "the image ID",
          "type": "string"
        },
        "mounts": {
          "description": "the container labels",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "platform": {
          "description": "platform",
          "type": "string",
          "enum": [
            "kubernetes",
            "rescale"
          ]
        },
        "started": {
          "description": "started unix timestamp",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "the status of the job",
          "type": "string"
        }
      }
    },
    "JobDetail": {
      "description": "the details of a job",
      "allOf": [
        {
          "$ref": "#/definitions/Job"
        },
        {
          "$ref": "#/definitions/JobLogs"
        },
        {
          "$ref": "#/definitions/JobFiles"
        }
      ]
    },
    "JobFile": {
      "description": "the output file",
      "required": [
        "name",
        "size"
      ],
      "properties": {
        "downloadURL": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "JobFiles": {
      "description": "the output files",
      "required": [
        "files"
      ],
      "properties": {
        "apiToken": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobFile"
          }
        }
      }
    },
    "JobLog": {
      "description": "the log structure",
      "required": [
        "log"
      ],
      "properties": {
        "log": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "JobLogs": {
      "description": "the log structure",
      "required": [
        "logs"
      ],
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobLog"
          }
        }
      }
    },
    "NgcImage": {
      "description": "NGC docker image information",
      "required": [
        "tag",
        "size",
        "updated"
      ],
      "properties": {
        "size": {
          "description": "the image size",
          "type": "integer",
          "format": "int64"
        },
        "tag": {
          "description": "the image tag",
          "type": "string"
        },
        "updated": {
          "description": "updated unix timestamp",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Notebook": {
      "description": "Jupyter notebook information",
      "required": [
        "id",
        "name",
        "image"
      ],
      "properties": {
        "id": {
          "description": "the container ID",
          "type": "string"
        },
        "image": {
          "description": "the image ID",
          "type": "string"
        },
        "name": {
          "description": "the container name",
          "type": "string"
        },
        "port": {
          "description": "the container published port",
          "type": "integer",
          "format": "int64"
        },
        "started": {
          "description": "started unix timestamp",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "state of the container",
          "type": "string"
        }
      }
    },
    "NotebookDetail": {
      "description": "Rescale Job information",
      "required": [
        "id",
        "token"
      ],
      "properties": {
        "ended": {
          "description": "ended unix timestamp",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "the container ID",
          "type": "string"
        },
        "mounts": {
          "description": "the container labels",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "the container name",
          "type": "string"
        },
        "port": {
          "description": "the container published port",
          "type": "integer",
          "format": "int64"
        },
        "started": {
          "description": "started unix timestamp",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "state of the container",
          "type": "string"
        },
        "token": {
          "description": "Jupyter notebook's login token",
          "type": "string"
        }
      }
    },
    "Repository": {
      "description": "docker image information",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "description": {
          "description": "the image description",
          "type": "string"
        },
        "name": {
          "description": "the image name",
          "type": "string"
        },
        "namespace": {
          "description": "the repositry's namespace",
          "type": "string"
        }
      }
    },
    "RescaleApplication": {
      "description": "Rescale Application",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RescaleApplicationVersion"
          }
        }
      }
    },
    "RescaleApplicationVersion": {
      "description": "version of Rescale Applications",
      "required": [
        "id",
        "code",
        "version"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "coretypes": {
          "description": "supported CoreTypes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "RescaleCoreType": {
      "description": "Rescale CoreType",
      "required": [
        "code",
        "name"
      ],
      "properties": {
        "baseClock": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "interconnect": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "processor": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RescaleCoreTypeResources"
          }
        }
      }
    },
    "RescaleCoreTypeResources": {
      "description": "CPU/GPU cores",
      "required": [
        "cores",
        "gpus"
      ],
      "properties": {
        "cores": {
          "description": "the number of CPU cores",
          "type": "integer",
          "format": "int64"
        },
        "gpus": {
          "description": "the number of GPUs",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Session": {
      "description": "docker image information",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "description": "API Token",
          "type": "string"
        }
      }
    },
    "Version": {
      "description": "application version",
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "build_date": {
          "description": "date which this app was built at",
          "type": "string"
        },
        "version": {
          "description": "version name",
          "type": "string"
        }
      }
    },
    "Versions": {
      "description": "application versions",
      "type": "object",
      "required": [
        "current",
        "latest"
      ],
      "properties": {
        "current": {
          "description": "Current running service version",
          "$ref": "#/definitions/Version"
        },
        "latest": {
          "description": "The latest application version which can be installed",
          "$ref": "#/definitions/Version"
        }
      }
    },
    "Workspace": {
      "description": "User's workspace",
      "required": [
        "path"
      ],
      "properties": {
        "absolute_path": {
          "type": "string"
        },
        "jobs": {
          "description": "Jobs which are mounting the workspace",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notebooks": {
          "description": "Notebooks which are mounting the workspace",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "api-authorizer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
