// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Image docker image information
//
// swagger:model Image
type Image struct {

	// created unix timestamp
	Created string `json:"created,omitempty"`

	// the image ID
	// Required: true
	ID *string `json:"id"`

	// the image parent ID
	ParentID string `json:"parentID,omitempty"`

	// the image digests
	RepoDigests []string `json:"repoDigests"`

	// the image name/tag
	// Required: true
	RepoTags []string `json:"repoTags"`

	// size of the image
	Size int64 `json:"size,omitempty"`

	// status of the image
	Status string `json:"status,omitempty"`

	// virtual size of the image
	VirtualSize int64 `json:"virtualSize,omitempty"`
}

// Validate validates this image
func (m *Image) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRepoTags(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Image) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *Image) validateRepoTags(formats strfmt.Registry) error {

	if err := validate.Required("repoTags", "body", m.RepoTags); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Image) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Image) UnmarshalBinary(b []byte) error {
	var res Image
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
