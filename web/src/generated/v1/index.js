/**
 * AI Gateway
 * A platform for machine learning & high performance computing 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountInfo', 'model/AccountInfo1', 'model/AppError', 'model/Configuration', 'model/Endpoints', 'model/Error', 'model/IPythonNotebook', 'model/Image', 'model/ImageName', 'model/ImageName1', 'model/ImageName2', 'model/Job', 'model/JobAttrs', 'model/JobAttrs1', 'model/JobFile', 'model/JobFiles', 'model/JobLog', 'model/JobLogs', 'model/NewJobID', 'model/NgcImage', 'model/Notebook', 'model/NotebookAttrs', 'model/NotebookDetail', 'model/Repository', 'model/RescaleApplication', 'model/RescaleApplicationVersion', 'model/RescaleCoreType', 'model/RescaleCoreTypeResources', 'model/Session', 'model/Version', 'model/Versions', 'model/Workspace', 'model/JobDetail', 'api/AppApi', 'api/AppErrorsApi', 'api/ImageApi', 'api/JobApi', 'api/NotebookApi', 'api/RepositoryApi', 'api/RescaleApi', 'api/WorkspaceApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccountInfo'), require('./model/AccountInfo1'), require('./model/AppError'), require('./model/Configuration'), require('./model/Endpoints'), require('./model/Error'), require('./model/IPythonNotebook'), require('./model/Image'), require('./model/ImageName'), require('./model/ImageName1'), require('./model/ImageName2'), require('./model/Job'), require('./model/JobAttrs'), require('./model/JobAttrs1'), require('./model/JobFile'), require('./model/JobFiles'), require('./model/JobLog'), require('./model/JobLogs'), require('./model/NewJobID'), require('./model/NgcImage'), require('./model/Notebook'), require('./model/NotebookAttrs'), require('./model/NotebookDetail'), require('./model/Repository'), require('./model/RescaleApplication'), require('./model/RescaleApplicationVersion'), require('./model/RescaleCoreType'), require('./model/RescaleCoreTypeResources'), require('./model/Session'), require('./model/Version'), require('./model/Versions'), require('./model/Workspace'), require('./model/JobDetail'), require('./api/AppApi'), require('./api/AppErrorsApi'), require('./api/ImageApi'), require('./api/JobApi'), require('./api/NotebookApi'), require('./api/RepositoryApi'), require('./api/RescaleApi'), require('./api/WorkspaceApi'));
  }
}(function(ApiClient, AccountInfo, AccountInfo1, AppError, Configuration, Endpoints, Error, IPythonNotebook, Image, ImageName, ImageName1, ImageName2, Job, JobAttrs, JobAttrs1, JobFile, JobFiles, JobLog, JobLogs, NewJobID, NgcImage, Notebook, NotebookAttrs, NotebookDetail, Repository, RescaleApplication, RescaleApplicationVersion, RescaleCoreType, RescaleCoreTypeResources, Session, Version, Versions, Workspace, JobDetail, AppApi, AppErrorsApi, ImageApi, JobApi, NotebookApi, RepositoryApi, RescaleApi, WorkspaceApi) {
  'use strict';

  /**
   * A_platform_for_machine_learning__high_performance_computing.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var AiGateway = require('index'); // See note below*.
   * var xxxSvc = new AiGateway.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new AiGateway.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new AiGateway.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new AiGateway.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccountInfo model constructor.
     * @property {module:model/AccountInfo}
     */
    AccountInfo: AccountInfo,
    /**
     * The AccountInfo1 model constructor.
     * @property {module:model/AccountInfo1}
     */
    AccountInfo1: AccountInfo1,
    /**
     * The AppError model constructor.
     * @property {module:model/AppError}
     */
    AppError: AppError,
    /**
     * The Configuration model constructor.
     * @property {module:model/Configuration}
     */
    Configuration: Configuration,
    /**
     * The Endpoints model constructor.
     * @property {module:model/Endpoints}
     */
    Endpoints: Endpoints,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The IPythonNotebook model constructor.
     * @property {module:model/IPythonNotebook}
     */
    IPythonNotebook: IPythonNotebook,
    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image: Image,
    /**
     * The ImageName model constructor.
     * @property {module:model/ImageName}
     */
    ImageName: ImageName,
    /**
     * The ImageName1 model constructor.
     * @property {module:model/ImageName1}
     */
    ImageName1: ImageName1,
    /**
     * The ImageName2 model constructor.
     * @property {module:model/ImageName2}
     */
    ImageName2: ImageName2,
    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job: Job,
    /**
     * The JobAttrs model constructor.
     * @property {module:model/JobAttrs}
     */
    JobAttrs: JobAttrs,
    /**
     * The JobAttrs1 model constructor.
     * @property {module:model/JobAttrs1}
     */
    JobAttrs1: JobAttrs1,
    /**
     * The JobFile model constructor.
     * @property {module:model/JobFile}
     */
    JobFile: JobFile,
    /**
     * The JobFiles model constructor.
     * @property {module:model/JobFiles}
     */
    JobFiles: JobFiles,
    /**
     * The JobLog model constructor.
     * @property {module:model/JobLog}
     */
    JobLog: JobLog,
    /**
     * The JobLogs model constructor.
     * @property {module:model/JobLogs}
     */
    JobLogs: JobLogs,
    /**
     * The NewJobID model constructor.
     * @property {module:model/NewJobID}
     */
    NewJobID: NewJobID,
    /**
     * The NgcImage model constructor.
     * @property {module:model/NgcImage}
     */
    NgcImage: NgcImage,
    /**
     * The Notebook model constructor.
     * @property {module:model/Notebook}
     */
    Notebook: Notebook,
    /**
     * The NotebookAttrs model constructor.
     * @property {module:model/NotebookAttrs}
     */
    NotebookAttrs: NotebookAttrs,
    /**
     * The NotebookDetail model constructor.
     * @property {module:model/NotebookDetail}
     */
    NotebookDetail: NotebookDetail,
    /**
     * The Repository model constructor.
     * @property {module:model/Repository}
     */
    Repository: Repository,
    /**
     * The RescaleApplication model constructor.
     * @property {module:model/RescaleApplication}
     */
    RescaleApplication: RescaleApplication,
    /**
     * The RescaleApplicationVersion model constructor.
     * @property {module:model/RescaleApplicationVersion}
     */
    RescaleApplicationVersion: RescaleApplicationVersion,
    /**
     * The RescaleCoreType model constructor.
     * @property {module:model/RescaleCoreType}
     */
    RescaleCoreType: RescaleCoreType,
    /**
     * The RescaleCoreTypeResources model constructor.
     * @property {module:model/RescaleCoreTypeResources}
     */
    RescaleCoreTypeResources: RescaleCoreTypeResources,
    /**
     * The Session model constructor.
     * @property {module:model/Session}
     */
    Session: Session,
    /**
     * The Version model constructor.
     * @property {module:model/Version}
     */
    Version: Version,
    /**
     * The Versions model constructor.
     * @property {module:model/Versions}
     */
    Versions: Versions,
    /**
     * The Workspace model constructor.
     * @property {module:model/Workspace}
     */
    Workspace: Workspace,
    /**
     * The JobDetail model constructor.
     * @property {module:model/JobDetail}
     */
    JobDetail: JobDetail,
    /**
     * The AppApi service constructor.
     * @property {module:api/AppApi}
     */
    AppApi: AppApi,
    /**
     * The AppErrorsApi service constructor.
     * @property {module:api/AppErrorsApi}
     */
    AppErrorsApi: AppErrorsApi,
    /**
     * The ImageApi service constructor.
     * @property {module:api/ImageApi}
     */
    ImageApi: ImageApi,
    /**
     * The JobApi service constructor.
     * @property {module:api/JobApi}
     */
    JobApi: JobApi,
    /**
     * The NotebookApi service constructor.
     * @property {module:api/NotebookApi}
     */
    NotebookApi: NotebookApi,
    /**
     * The RepositoryApi service constructor.
     * @property {module:api/RepositoryApi}
     */
    RepositoryApi: RepositoryApi,
    /**
     * The RescaleApi service constructor.
     * @property {module:api/RescaleApi}
     */
    RescaleApi: RescaleApi,
    /**
     * The WorkspaceApi service constructor.
     * @property {module:api/WorkspaceApi}
     */
    WorkspaceApi: WorkspaceApi
  };

  return exports;
}));
