/**
 * AI Gateway
 * A platform for machine learning & high performance computing 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Error', 'model/RescaleApplication', 'model/RescaleApplicationVersion', 'model/RescaleCoreType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Error'), require('../model/RescaleApplication'), require('../model/RescaleApplicationVersion'), require('../model/RescaleCoreType'));
  } else {
    // Browser globals (root is window)
    if (!root.AiGateway) {
      root.AiGateway = {};
    }
    root.AiGateway.RescaleApi = factory(root.AiGateway.ApiClient, root.AiGateway.Error, root.AiGateway.RescaleApplication, root.AiGateway.RescaleApplicationVersion, root.AiGateway.RescaleCoreType);
  }
}(this, function(ApiClient, Error, RescaleApplication, RescaleApplicationVersion, RescaleCoreType) {
  'use strict';

  /**
   * Rescale service.
   * @module api/RescaleApi
   * @version 1.0.0
   */

  /**
   * Constructs a new RescaleApi. 
   * @alias module:api/RescaleApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getRescaleApplication operation.
     * @callback module:api/RescaleApi~getRescaleApplicationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RescaleApplication} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * returns a Rescale application 
     * @param {module:model/String} code application code
     * @param {module:api/RescaleApi~getRescaleApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RescaleApplication}
     */
    this.getRescaleApplication = function(code, callback) {
      var postBody = null;

      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling getRescaleApplication");
      }


      var pathParams = {
        'code': code
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api-authorizer'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = RescaleApplication;

      return this.apiClient.callApi(
        '/rescale/applications/{code}/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getRescaleApplicationVersion operation.
     * @callback module:api/RescaleApi~getRescaleApplicationVersionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RescaleApplicationVersion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * returns version information of a specified Rescale application 
     * @param {module:model/String} code Rescale application code
     * @param {String} version Rescale application version
     * @param {module:api/RescaleApi~getRescaleApplicationVersionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RescaleApplicationVersion}
     */
    this.getRescaleApplicationVersion = function(code, version, callback) {
      var postBody = null;

      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling getRescaleApplicationVersion");
      }

      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling getRescaleApplicationVersion");
      }


      var pathParams = {
        'code': code,
        'version': version
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api-authorizer'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = RescaleApplicationVersion;

      return this.apiClient.callApi(
        '/rescale/applications/{code}/{version}/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getRescaleCoreTypes operation.
     * @callback module:api/RescaleApi~getRescaleCoreTypesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/RescaleCoreType>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * returns Rescale CoreTypes 
     * @param {Object} opts Optional parameters
     * @param {String} opts.appVer Rescale Application version
     * @param {Number} opts.minGpus Required number of GPUs
     * @param {module:api/RescaleApi~getRescaleCoreTypesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/RescaleCoreType>}
     */
    this.getRescaleCoreTypes = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'app_ver': opts['appVer'],
        'min_gpus': opts['minGpus'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api-authorizer'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [RescaleCoreType];

      return this.apiClient.callApi(
        '/rescale/coretypes', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
