/**
 * AI Gateway
 * A platform for machine learning & high performance computing 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.AiGateway) {
      root.AiGateway = {};
    }
    root.AiGateway.Image = factory(root.AiGateway.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Image model module.
   * @module model/Image
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Image</code>.
   * docker image information
   * @alias module:model/Image
   * @class
   * @param id {String} the image ID
   * @param repoTags {Array.<String>} the image name/tag
   */
  var exports = function(id, repoTags) {
    var _this = this;

    _this['id'] = id;


    _this['repoTags'] = repoTags;




  };

  /**
   * Constructs a <code>Image</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Image} obj Optional instance to populate.
   * @return {module:model/Image} The populated <code>Image</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('parentID')) {
        obj['parentID'] = ApiClient.convertToType(data['parentID'], 'String');
      }
      if (data.hasOwnProperty('repoDigests')) {
        obj['repoDigests'] = ApiClient.convertToType(data['repoDigests'], ['String']);
      }
      if (data.hasOwnProperty('repoTags')) {
        obj['repoTags'] = ApiClient.convertToType(data['repoTags'], ['String']);
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('size')) {
        obj['size'] = ApiClient.convertToType(data['size'], 'Number');
      }
      if (data.hasOwnProperty('virtualSize')) {
        obj['virtualSize'] = ApiClient.convertToType(data['virtualSize'], 'Number');
      }
      if (data.hasOwnProperty('created')) {
        obj['created'] = ApiClient.convertToType(data['created'], 'String');
      }
    }
    return obj;
  }

  /**
   * the image ID
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * the image parent ID
   * @member {String} parentID
   */
  exports.prototype['parentID'] = undefined;
  /**
   * the image digests
   * @member {Array.<String>} repoDigests
   */
  exports.prototype['repoDigests'] = undefined;
  /**
   * the image name/tag
   * @member {Array.<String>} repoTags
   */
  exports.prototype['repoTags'] = undefined;
  /**
   * status of the image
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * size of the image
   * @member {Number} size
   */
  exports.prototype['size'] = undefined;
  /**
   * virtual size of the image
   * @member {Number} virtualSize
   */
  exports.prototype['virtualSize'] = undefined;
  /**
   * created unix timestamp
   * @member {String} created
   */
  exports.prototype['created'] = undefined;



  return exports;
}));


