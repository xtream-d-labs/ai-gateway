version: "2.4"

services:
  api:
    image: aigateway/api:%{version}
    environment:
      - SS_MUST_SIGN_IN=false
      - SS_JUPYTER_MINIMUM_PORT=30000
      - SS_MAX_WORKERS=2
      - SS_DOCKER_REGISTRY_ENDPOINT
      - SS_DOCKER_REGISTRY_HOST_NAME
      - SS_RESCALE_SINGULARITY_VERSION=3.2.0
      - SS_RESCALE_JOB_WALLTIME=3600
      - SS_LOG_LEVEL=debug
      - SS_LOG_FORMAT=json
      - SS_IMAGES_TOBE_IGNORED=aigateway/,ss-jupyter/,<none>
      - SS_WORKSPACE_HOST_DIR=${PWD}/aigateway/workspaces
      - SS_SINGULARITY_HOST_DIR=${PWD}/aigateway/simages
      - SS_DATABASE_ENDPOINT=user:pass@tcp(db:3306)/aigateway?charset=utf8mb4&collation=utf8_unicode_ci&parseTime=true
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ${PWD}/aigateway/workspaces:/tmp/work
      - ${PWD}/aigateway/simages:/tmp/simg
      - database-cache:/tmp/badger
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      db:
        condition: service_healthy
    restart: always
    container_name: api

  web:
    image: aigateway/web:%{version}
    logging:
      driver: none
    restart: always
    container_name: web

  proxy:
    image: aigateway/proxy:1.16
    ports:
      - "%{publish_port}:80"
    logging:
      driver: none
    restart: always
    container_name: proxy

  db:
    image: mysql:5.6.49
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=aigateway
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pass
    volumes:
      - database-mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqlshow -u root -proot"]
      interval: "5s"
      retries: 10
    logging:
      driver: none
    restart: always
    container_name: db

volumes:
  database-cache:
  database-mysql:
